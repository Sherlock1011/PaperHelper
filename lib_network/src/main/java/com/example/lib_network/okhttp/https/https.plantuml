@startuml

title __HTTPS's Class Diagram__\n

  namespace com.example.lib_network {
    namespace okhttp {
      namespace https {
        class com.example.lib_network.okhttp.https.HttpsUtils {
            {static} + getSslSocketFactory()
            {static} + initSSLSocketFactory()
            {static} + initTrustManager()
            {static} - chooseTrustManager()
            {static} - prepareKeyManager()
            {static} - prepareTrustManager()
        }
      }
    }
  }
  

  namespace com.example.lib_network {
    namespace okhttp {
      namespace https {
        class com.example.lib_network.okhttp.https.HttpsUtils.MyTrustManager {
            - defaultTrustManager : X509TrustManager
            - localTrustManager : X509TrustManager
            + MyTrustManager()
            + checkClientTrusted()
            + checkServerTrusted()
            + getAcceptedIssuers()
        }
      }
    }
  }
  

  com.example.lib_network.okhttp.https.HttpsUtils +-down- com.example.lib_network.okhttp.https.HttpsUtils.MyTrustManager
  com.example.lib_network.okhttp.https.HttpsUtils.MyTrustManager .up.|> javax.net.ssl.X509TrustManager


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
